{"filter":false,"title":"photo_uploader.rb","tooltip":"/app/uploaders/photo_uploader.rb","undoManager":{"mark":8,"position":8,"stack":[[{"start":{"row":4,"column":2},"end":{"row":49,"column":0},"action":"remove","lines":["# Include RMagick or MiniMagick support:","  # include CarrierWave::RMagick","  # include CarrierWave::MiniMagick","","  # Choose what kind of storage to use for this uploader:","  storage :file","  # storage :fog","","  # Override the directory where uploaded files will be stored.","  # This is a sensible default for uploaders that are meant to be mounted:","  def store_dir","    \"uploads/#{model.class.to_s.underscore}/#{mounted_as}/#{model.id}\"","  end","","  # Provide a default URL as a default if there hasn't been a file uploaded:","  # def default_url","  #   # For Rails 3.1+ asset pipeline compatibility:","  #   # ActionController::Base.helpers.asset_path(\"fallback/\" + [version_name, \"default.png\"].compact.join('_'))","  #","  #   \"/images/fallback/\" + [version_name, \"default.png\"].compact.join('_')","  # end","","  # Process files as they are uploaded:","  # process :scale => [200, 300]","  #","  # def scale(width, height)","  #   # do something","  # end","","  # Create different versions of your uploaded files:","  # version :thumb do","  #   process :resize_to_fit => [50, 50]","  # end","","  # Add a white list of extensions which are allowed to be uploaded.","  # For images you might use something like this:","  # def extension_white_list","  #   %w(jpg jpeg gif png)","  # end","","  # Override the filename of the uploaded files:","  # Avoid using model.id or version_name here, see uploader/store.rb for details.","  # def filename","  #   \"something.jpg\" if original_filename","  # end",""],"id":2}],[{"start":{"row":4,"column":2},"end":{"row":5,"column":0},"action":"insert","lines":["",""],"id":3},{"start":{"row":5,"column":0},"end":{"row":5,"column":2},"action":"insert","lines":["  "]}],[{"start":{"row":4,"column":2},"end":{"row":63,"column":7},"action":"insert","lines":["# Include RMagick or MiniMagick support:","  # include CarrierWave::RMagick","  include CarrierWave::MiniMagick","","  # Include the Sprockets helpers for Rails 3.1+ asset pipeline compatibility:","  # include Sprockets::Helpers::RailsHelper","  # include Sprockets::Helpers::IsolatedHelper","","  # Include the sprockets-rails helper for Rails 4+ asset pipeline compatibility:","  include Sprockets::Rails::Helper","","  # Choose what kind of storage to use for this uploader:","  # storage :file","  storage :fog","","  # Override the directory where uploaded files will be stored.","  # This is a sensible default for uploaders that are meant to be mounted:","  def store_dir","    \"uploads/#{model.class.to_s.underscore}/#{mounted_as}/#{model.id}\"","  end","","  # Provide a default URL as a default if there hasn't been a file uploaded:","  # def default_url","  #   # For Rails 3.1+ asset pipeline compatibility:","  #   # asset_path(\"fallback/\" + [version_name, \"default.png\"].compact.join('_'))","  #","  #   \"/images/fallback/\" + [version_name, \"default.png\"].compact.join('_')","  # end","","  # Process files as they are uploaded:","  #process :resize_to_fill => [200, 200]","  #","  # def scale(width, height)","  #   # do something","  # end","","  # Create different versions of your uploaded files:","  version :tiny do","    process :resize_to_fill => [20, 20]","  end","","  version :profile_size do","    process :resize_to_fill => [300, 300]","  end","","  # version :full_size do","  #   process :resize_to_fill => [700, 700]","  # end","","  # Add a white list of extensions which are allowed to be uploaded.","  # For images you might use something like this:","  def extension_white_list","    %w(jpg jpeg gif png)","  end","","  # Override the filename of the uploaded files:","  # Avoid using model.id or version_name here, see uploader/store.rb for details.","  # def filename","  #   \"something.jpg\" if original_filename","  # end"],"id":4}],[{"start":{"row":63,"column":7},"end":{"row":63,"column":8},"action":"insert","lines":["g"],"id":5}],[{"start":{"row":63,"column":8},"end":{"row":63,"column":9},"action":"insert","lines":["i"],"id":6}],[{"start":{"row":63,"column":9},"end":{"row":63,"column":10},"action":"insert","lines":["t"],"id":7}],[{"start":{"row":63,"column":9},"end":{"row":63,"column":10},"action":"remove","lines":["t"],"id":8}],[{"start":{"row":63,"column":8},"end":{"row":63,"column":9},"action":"remove","lines":["i"],"id":9}],[{"start":{"row":63,"column":7},"end":{"row":63,"column":8},"action":"remove","lines":["g"],"id":10}]]},"ace":{"folds":[],"scrolltop":671,"scrollleft":0,"selection":{"start":{"row":63,"column":7},"end":{"row":63,"column":7},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":40,"state":"start","mode":"ace/mode/ruby"}},"timestamp":1448394416629,"hash":"a4875bb35093816e3ce4c11c7a6eb6d9dd04c6b1"}